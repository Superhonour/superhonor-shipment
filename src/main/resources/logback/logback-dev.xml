<?xml version="1.0" encoding="UTF-8"?>

<configuration scan="true" scanPeriod="60 seconds"
               debug="false">
    <!-- scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
        debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false -->

    <springProperty scope="context" name="app_name"
                    source="spring.application.name"
                    defaultValue="app_name"/>
    <springProperty scope="context" name="log_dir"
                    source="logging.dir"
                    defaultValue="/tmp/logs"/>
    <!-- 应用名称 -->
<!--    <property name="app_name" value="superhonor-test" />-->

    <!--日志文件的保存路径,首先查找系统属性-Dlog.dir,如果存在就使用其；否则，在当前目录下创建名为logs目录做日志存放的目录 -->
    <property name="log_home" value="${log_dir}/${app_name}" />

    <!-- 日志输出格式 -->
    <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
<!--    <property name="console_pattern"-->
<!--              value="%-5level \t %d{yyyy-MM-dd HH:mm:ss.SSS} \t %msg \t [%thread] \t %logger{80}%n" />-->

<!--    <property name="warn_pattern"-->
<!--              value="%d{yyyy-MM-dd HH:mm:ss.SSS} - %msg %n" />-->

<!--    <property name="error_pattern"-->
<!--              value="%d{yyyy-MM-dd HH:mm:ss.SSS} - %msg %n" />-->

    <!--控制台输出 -->
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level[%thread]%logger{56}.%method:%L -%msg%n</Pattern>
        </encoder>
    </appender>

    <root>
        <level value="INFO" />
        <appender-ref ref="stdout" />
    </root>

</configuration>